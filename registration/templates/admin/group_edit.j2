{% set title = group.display_name + " bearbeiten" %}

{% extends "base_leaflet.j2" %}
{% import "bootstrap5/form.html" as wtf %}
{% from 'bootstrap5/form.html' import render_form_row, render_field %}

{% block content %}
<div class="row header">
    <div class="col-xs-12">
        <h1>
            {{ title }}
        </h1>
    </div>
</div>


<div class="row mb-5">
    <div class="col-sm-6 first-column mb-3">
        <div class="row mb-3">
            <form action="" method="POST" class="form" role="form" enctype="multipart/form-data">
                {{ form.csrf_token() }}
                {{ render_form_row([form.group_type, form.name]) }}
                {{ render_form_row([form.street]) }}
                <div class="row">
                    <div class="col">
                    {{ render_field(form.zip) }}
                    </div>
                    <div class="col">
                    {{ render_field(form.city) }}
                    </div>
                </div>
                {{ render_form_row([form.website]) }}
                {{ render_form_row([form.instagram]) }}
                {{ render_form_row([form.facebook]) }}
                {{ render_field(form.submit, button_style="success") }}
            </form>
        </div>
    </div>
    <div class="col-sm-6 mb-3">
        <div id="map" class="h-100"></div>
    </div>
</div>

<div class="row">
    <div class="col mb-3">
        <h1 class="float-start">Berechtigungen</h1>
        <div class="btn-group float-end">
            <a href="{{ url_for('auth.edit_permission', permission_id='new', group_id=group.id) }}"
                class="btn btn-outline-secondary"><i class="fa-solid fa-plus"></i></a>
        </div>
    </div>
</div>

<div class="row">
    <div class="col mb-3">
        <table class="table table-striped table-hover align-middle" id="datatable" style="width: 100%">
            <thead>
                <tr>
                    <th scope="col">Nutzer*in</th>
                    <th scope="col">E-Mail Adresse</th>
                    <th scope="col">Status</th>
                    <th scope="col" class="text-end"></th>
                </tr>
            </thead>
            <tbody>
                {% for perm in group.permissions %}
                <tr>
                    <th>{{ perm.user.name }}</th>
                    <td>{{ perm.user.id }}</td>
                    <td>
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckCheckedDisabled" {% if
                            perm.granted %}checked{% endif %} disabled>
                    </td>
                    <td class="text-end">
                        <div class="btn-group">
                            <a href="{{ url_for('auth.edit_permission', user_id=perm.user_id, permission_id=perm.id,) }}"
                                class="btn btn-outline-secondary"><i class="fa-solid fa-pen-to-square"></i></a>
                        </div>
                    </td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
</div>
{% endblock %}

{% block scripts %}
{{ super() }}
<script>
    // initialize map
    var map = L.map('map')
    L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
        maxZoom: 18,
        id: 'mapbox/light-v10',
        tileSize: 512,
        zoomOffset: -1,
        accessToken: 'pk.eyJ1IjoiaG9lY2hzdCIsImEiOiJjazVueDhyMWkwenpuM2RydzltNjhraDAzIn0.HntghYG9IBZvVd0bUJEY9Q'
    }).addTo(map);
    var locator = L.control.locate({ locateOptions: { maxZoom: 9 } }).addTo(map);

    var marker;

    // add marker if lat/lon is set
    lat = $('#lat').val();
    lng = $('#lon').val();

    if (lat && lng) {
        marker = L.marker([lat, lng]).addTo(map);
        map.setView([lat, lng], 11);
    } else {
        map.setView([51.3, 10.7], 6);
    }

    // allow user to click on map to set lat/lon
    map.on('click', function (e) {
        // update marker position or create new one
        if (!window.marker) {
            window.marker = L.marker(e.latlng).addTo(map);
        } else {
            window.marker.setLatLng(e.latlng);
        }

        // write lat/lon to form
        $('#lat').val(e.latlng.lat);
        $('#lon').val(e.latlng.lng);
    });

    function updateFromAddress() {
        address = `${$('#street').val()}, ${$('#zip').val()} ${$('#city').val()}`
        encodedAddress = encodeURIComponent(address);
        accessToken = 'pk.eyJ1IjoiaG9lY2hzdCIsImEiOiJjazVueDhyMWkwenpuM2RydzltNjhraDAzIn0.HntghYG9IBZvVd0bUJEY9Q'
        geocodingURI = "https://api.mapbox.com/geocoding/v5/mapbox.places/" + encodedAddress + ".json?limit=1&access_token=" + accessToken

        $.getJSON(geocodingURI, function(data) {
            try {
                coords = data.features[0].geometry.coordinates.reverse()
                alert(coords);

                // update marker position or create new one
                if (!window.marker) {
                    window.marker = L.marker(coords).addTo(map);
                } else {
                    window.marker.setLatLng(coords);
                }

                // write lat/lon to form
                $('#lat').val(coords[0]);
                $('#lon').val(coords[1]);
            } catch (error) {
                alert("Konnte keine Koordinaten für die Adresse finden.");
            }
        });
    }
</script>
{% endblock %}